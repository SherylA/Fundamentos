Prueba de escritorio

1. Valores de a={ 1900, 2000, -9, 2000.5}
2. Valores fijos Mul={4,100,400}
3. En el para i es igual a {1,2,3}
4. En el para se calcula div[i]=a/Mul[i]
5. En el para se calcula dec[i]=a-trunc(div[i])*Mul[i]  ####La función truncar existe en la lib math que no está cargada
6. En el para se calcula op[i]= 1 si dec[i]==0 y 0 sino
7. Se mira si op[1]==1 y !(op[2]==1 y op[3]!=1) -->V bisiesto sino -->F no bisiesto

###############
a=1900

div ={ 475, 19, 4.75 }
dec ={   0,  0,  300 } #El valor no se puede hallar error de librería
op  ={   1,  1,    0 }

Resultado de los Si (V) y !(V y V) --> F (no bisiesto)

###############
a=2000

div ={ 500, 20, 5 }
dec ={   0,  0, 0 } #El valor no se puede hallar error de librería
op  ={   1,  1, 1 }

Resultado de los Si (V) y !(V y F) --> V (bisiesto)

###############
a=-9

div ={ -2.25, -0.09, -0.0225 }
dec ={     -1,  -9,       -9 } #El valor no se puede hallar error de librería
op  ={      0,   0,        0 }

Resultado de los Si (F) y !(F y V) --> F (no bisiesto)

###############
a=2000.5

div ={ 500.125, 20.005, 5.00125 }
dec ={     0.5,    0.5,     0.5 } #El valor no se puede hallar error de librería
op  ={      0,       0,       0 }

Resultado de los Si (F) y !(F y V) --> F (no bisiesto)


Podemos ver que toma tiempos negativos y además el año 2000.5 en perspectiva sería el año 2000 en junio
así que sigue siendo un año bisiesto, pero principalmente usa una función si llamar a la correspondiente librería. El diagrama no soluciona el problema.
